{"version":3,"sources":["component/styledComponents.js","utils.js","wordList.js","actions.js","component/TextBox.js","component/UserInput.js","container/InputContainer.js","container/Main.js","component/SideBare.js","component/Chart.js","component/ToolTip.js","store.js","reducer.js","App.js","serviceWorker.js","index.js"],"names":["Grid","styled","div","SideBare","aside","StyledTextBox","header","props","height","Word","span","selected","errStyle","isCorrect","Char","StyledChart","ChartsContainer","section","ScoreContainer","Button","formatTxt","wordList","map","word","i","id","key","charAt","slice","calcAccuracy","score","errorArr","calc","length","toFixed","saveResultLocalStorage","accuracy","type","tapingSpeedData","window","localStorage","getItem","JSON","parse","data","date","Date","now","push","console","log","setItem","stringify","getOffsetTop","textBoxRef","nextWord","current","querySelector","offsetTop","wordListArr","split","getRandomWordList","number","Array","fill","el","index","Math","floor","random","DEC_TIMER","updateDisplayTxt","dispatch","state","displayText","currentWord","cursor","input","textArr","includes","className","style","color","formatDisplayTxt","update","reload","startTimer","start","decTimer","incTimer","gameOver","x","filter","isTimerStarted","currentWordOffsetTop","timer","training","updateDataChart","updateCurrentWordOffset","offset","updateToolTip","toolTip","updateScore","updateInterval","interval","TextBox","errorArrTxt","useRef","useEffect","scroll","top","scrollTop","behavior","ref","onMouseOut","visible","txt","onMouseOver","e","target","error","find","onMouseMove","left","clientX","clientY","StyledInput","isFocus","UserInput","useState","setIsFocus","placeholder","autoFocus","value","onChange","newErroArr","newCursor","str","trim","checkInput","err","endsWith","setInput","onFocus","onBlur","Section","flexDirection","justify","ButtonReload","ToggleButton","InputContainer","onClick","toggleTraining","StyledMain","main","ButtonContainer","ButtonGetText","Main","clearInterval","getNewTxt","fontSize","Chart","title","svgRef","d3","select","remove","margin","width","svg","append","attr","domain","range","call","y","d","datum","text","selectAll","enter","toLocaleString","StyledToolTip","ToolTip","initState","dataChart","undefined","reducer","action","actionsTypes","newErrorArr","GlobalStyle","createGlobalStyle","App","useReducer","timerInterval","setInterval","wpm","words","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d0749a17.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\n\nexport const Grid = styled.div`\n  display: grid;\n  grid-template-columns: 300px minmax(0, 1fr);\n  grid-template-rows: 1.5fr 1fr;\n  height: 100vh;\n  background: #f6f7ff;\n`;\n\nexport const SideBare = styled.aside`\n  grid-column: 1;\n  grid-row: 1 ;\n  \n`;\n\nexport const Header = styled.header`\n  grid-column: 2;\n  grid-row: 1;\n`;\n\n\n\nexport const StyledTextBox = styled.div`\n  font-size: 36px;\n  font-family: monospace;\n  display: flex;\n  flex-wrap: wrap;\n  height: ${props => props.height || 'auto'} ;\n\n  overflow: auto;\n  background: #eeeff8;\n border:  solid thin black;\n align-content: start;\n  \n`;\n\n\n\nexport const Timer = styled.span`\n  font-size: 22px;\n  margin-left: 1em;\n`\n\nexport const Word = styled.span`\n  padding: 0 .2em;\n  background-color: ${props => (props.selected ? \"rgba(0,0,0,0.1)\" : \"unset\")};\n  color: ${props => {\n    if (props.errStyle) {\n      return \"red\";\n    }\n    if (props.isCorrect) {\n      return \"green\";\n    }\n    return \"inherit\";\n  }};\n`;\n\nexport const Char = styled.span`\n  font-weight: bold;\n  text-decoration: underline;\n  color: ${props => {\n    if (props.errStyle) {\n      return \"red\";\n    }else{\n      return \"\";\n    }\n  }};\n`;\n\nexport const StyledChart = styled.div`\n\n`\nexport const ChartsContainer = styled.section`\n  grid-row: 2;\n  grid-column: 1 / span 2;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: center;\n  background: #6148ff;\n  border-top-left-radius: 200px;\n  padding-left: 100px\n\n`\nexport const ScoreContainer = styled.div`\n height: 100%;  \n  background: #6148ff;\n  border-bottom-right-radius: 150px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 20px;\n\n  & p{\n    margin: 0;\n    text-align: center;\n    color: #6de576;\n  }\n`\n\nexport const Button = styled.div`\n  font-size: 24px;\n  padding: .2em .5em;\n  border-radius: 5px;\n  color: #fff;\n  background: #6148ff;\n  border: thin solid #6148ff;\n\n  &:hover{    \n    cursor: pointer;\n   background: transparent;\n    color: #6148ff;\n  }\n`\n\n","import React from \"react\";\nimport { Word, Char } from \"./component/styledComponents\";\n\nexport const checkInput = (input = \"\", str = \"\") => {\n  if (input.trim() !== str.slice(0, input.length)) {\n    return false;\n  }\n  return true;\n};\n\nexport const formatTxt = wordList =>\n  wordList.map((word, i) =>\n    i === 0 ? (\n      <Word id={i} selected key={i}>\n         <Char >\n          {word.charAt(0)}\n        </Char>\n        {word.slice(1)}\n      </Word>\n    ) : (\n      <Word id={i} key={i}>\n        {word}\n      </Word>\n    )\n  );\n\nexport const calcAccuracy = ({ score, errorArr }) => {\n  const calc = 100 - (errorArr.length * 100) / (errorArr.length + score);\n  return calc ? calc.toFixed(0) : 100;\n};\n\nexport const saveResultLocalStorage = ({ score, accuracy, type }) => {\n  const tapingSpeedData = window.localStorage.getItem(\"tapingSpeedData\")\n    ? JSON.parse(window.localStorage.getItem(\"tapingSpeedData\"))\n    : [];\n  const data = {\n    date: Date.now(),\n    accuracy,\n    score,\n    type\n  };\n  tapingSpeedData.push(data);\n  console.log({ tapingSpeedData });\n  window.localStorage.setItem(\n    \"tapingSpeedData\",\n    JSON.stringify(tapingSpeedData)\n  );\n  return data;\n};\n\nexport const getDataLocalSorage = () => {\n  const tapingSpeedData = window.localStorage.getItem(\"tapingSpeedData\")\n    ? JSON.parse(window.localStorage.getItem(\"tapingSpeedData\"))\n    : [];\n  return tapingSpeedData;\n};\n\nexport const formatDisplayTxt = state => {\n  console.log(\"format text ----\");\n  const { cursor, errorArr, input, textArr } = state;\n   if (cursor > textArr.length -1){\n    return [\n      ...state.displayText.slice(0, -1),\n      <Word\n      errStyle={errorArr.includes(textArr.length -1)}\n      isCorrect={!errorArr.includes(textArr.length -1)}\n      key={textArr.length -1}\n      id={textArr.length -1}\n      className=\"last\"\n    >\n      { textArr[textArr.length -1] }\n      </Word>\n    ]\n   }\n  let currentWord;\n  if (!input) {\n    console.log(\"input is empty\", cursor);\n    currentWord = (\n      <Word\n        errStyle={errorArr.includes(cursor)}\n        selected\n        key={cursor}\n        id={cursor}\n        className=\"last\"\n      >\n        <Char >\n          {textArr[cursor].charAt(0)}\n        </Char>\n        {textArr[cursor].slice(1)}\n      </Word>\n    );\n  } else {\n    currentWord = (\n      <Word\n        errStyle={errorArr.includes(cursor)}\n        selected\n        key={cursor}\n        id={cursor}\n        className=\"last\"\n      >\n        <span style={{ color: !errorArr.includes(cursor) ? \"green\" : \"\" }}>\n          {textArr[cursor].slice(0, input.length )}\n        </span>\n        <Char >\n          {textArr[cursor].charAt(input.length )}\n        </Char>\n        {textArr[cursor].slice(input.length + 1)}\n      </Word>\n    );\n  }\n  if (cursor === 0) {\n    return [currentWord, ...state.displayText.slice(1)];\n  }\n  if (cursor === 1) {\n    return [\n      <Word\n        errStyle={errorArr.includes(0)}\n        isCorrect={!errorArr.includes(0)}\n        id={0}\n        key={0}\n      >\n        {state.textArr[0]}\n      </Word>,\n      currentWord,\n      ...state.displayText.slice(2)\n    ];\n  }\n  if (cursor < textArr.length) {\n    return [\n      ...state.displayText.slice(0, cursor - 1),\n      <Word\n        errStyle={errorArr.includes(cursor - 1)}\n        isCorrect={!errorArr.includes(cursor - 1)}\n        key={cursor - 1}\n        id={cursor - 1}\n      >\n        {state.textArr[cursor - 1]}\n      </Word>,\n      currentWord,\n      ...state.displayText.slice(cursor + 1)\n    ];\n  } else {\n    return [\n      ...state.displayText.slice(0, cursor - 1),\n      <Word\n        errStyle={errorArr.includes(cursor - 1)}\n        isCorrect={!errorArr.includes(cursor - 1)}\n        key={cursor - 1}\n        id={cursor - 1}\n      >\n        {state.textArr[cursor - 1]}\n      </Word>\n    ];\n  }\n};\n\nexport const getOffsetTop = textBoxRef => {\n  const nextWord = textBoxRef.current.querySelector(\".last\");\n  if (nextWord) {\n    return nextWord.offsetTop;\n  } else {\n    return textBoxRef.current.querySelector(\"span\").offsetTop;\n  }\n};\n","const txt =\n  \"about|above|add|after|again|air|all|almost|along|also|always|America|an|and|animal|another|answer|any|are|around|as|ask|at|away|back|be|because|been|before|began|begin|being|below|between|big|book|both|boy|but|by|call|came|can|car|carry|change|children|city|close|come|could|country|cut|day|did|different|do|does|don't|down|each|earth|eat|end|enough|even|every|example|eye|face|family|far|father|feet|few|find|first|follow|food|for|form|found|four|from|get|girl|give|go|good|got|great|group|grow|had|hand|hard|has|have|he|head|hear|help|her|here|high|him|his|home|house|how|idea|if|important|in|Indian|into|is|it|its|it's|just|keep|kind|know|land|large|last|later|learn|leave|left|let|letter|life|light|like|line|list|little|live|long|look|made|make|man|many|may|me|mean|men|might|mile|miss|more|most|mother|mountain|move|much|must|my|name|near|need|never|new|next|night|no|not|now|number|of|off|often|oil|old|on|once|one|only|open|or|other|our|out|over|own|page|paper|part|people|picture|place|plant|play|point|put|question|quick|quickly|quite|read|really|right|river|run|said|same|saw|say|school|sea|second|see|seem|sentence|set|she|should|show|side|small|so|some|something|sometimes|song|soon|sound|spell|start|state|still|stop|story|study|such|take|talk|tell|than|that|the|their|them|then|there|these|they|thing|think|this|those|thought|three|through|time|to|together|too|took|tree|try|turn|two|under|until|up|us|use|very|walk|want|was|watch|water|way|we|well|went|were|what|when|where|which|while|white|who|why|will|with|without|word|work|world|would|write|year|you|young|your\";\nconst wordListArr = txt.split(\"|\");\n\nexport const getRandomWordList = number => {\n  const wordList = Array(number)\n    .fill(0)\n    .map(el => {\n      const index = Math.floor(Math.random() * wordListArr.length );\n      return wordListArr[index];\n    });\n  return wordList;\n};\n","import { formatTxt, calcAccuracy, formatDisplayTxt } from \"./utils\";\nimport {getRandomWordList} from './wordList'\n\n\nexport const SET_INPUT = \"SET_INPUT\";\nexport const UPDATE_DISPLAY_TXT = \"UPDATE_DISPLAY_TXT\";\nexport const INC_CURSOR = \"INC_CURSOR\";\nexport const ADD_ERROR = \"ADD_ERROR\";\nexport const ADD_ERROR_TXT = \"ADD_ERROR_TXT\";\nexport const REMOVE_ERROR = \"REMOVE_ERROR\";\nexport const RELOAD = \"RELOAD\";\nexport const START_TIMER = \"START_TIMER\";\nexport const DEC_TIMER = \"DEC_TIMER\";\nexport const INC_TIMER = \"INC_TIMER\";\nexport const GAME_OVER = \"GAME_OVER\";\nexport const UPDATE_DATA_CHART = \"UPDATE_DATA_CHART\";\nexport const GET_NEW_TXT = \"GET_NEW_TXT\";\nexport const UPDATE_CURRENT_WORD_OFFSET = \"UPDATE_CURRENT_WORD_OFFSET\";\nexport const UPDATE_TOOLTIP = \"UPDATE_TOOLTIP\";\nexport const UPDATE_SCORE = \"UPDATE_SCORE\"\nexport const UPDATE_INTERVAL = \"UPDATE_INTERVAL\"\nexport const TOGGLE_TRAINING = \"TOGGLE_TRAINING\"\n\nexport const setInput = ({ input, dispatch }) => {\n  dispatch({ type: SET_INPUT, input });\n};\nexport const updateDisplayTxt = ({ dispatch, state }) => {\n  const displayText = formatDisplayTxt(state);\n  dispatch({ type: UPDATE_DISPLAY_TXT, update :{ errorArr: state.errorArr, displayText }});\n};\nexport const incrementCursor = ({ dispatch }) => {\n  dispatch({ type: INC_CURSOR });\n};\n\nexport const addError = ({ dispatch, error }) => {\n  dispatch({ type: ADD_ERROR, error });\n};\nexport const addErrorTxt = ({ dispatch, error }) => {\n  dispatch({ type: ADD_ERROR_TXT, error });\n};\n\nexport const removeError = ({ dispatch, errorArr, error }) => {\n  const newErrorArr = errorArr.filter(el => el !== error);\n  dispatch({ type: REMOVE_ERROR, newErrorArr });\n};\nexport const reload = ({ dispatch, state }) => {\n  const displayText = formatTxt(state.textArr);\n  dispatch({ type: RELOAD, displayText });\n};\nexport const startTimer = ({ start, dispatch }) => {\n  dispatch({ type: START_TIMER, start });\n};\n\nexport const decTimer = ({ dispatch }) => {\n  dispatch({ type: DEC_TIMER });\n};\nexport const incTimer = ({ dispatch }) => {\n  dispatch({ type: INC_TIMER });\n};\nexport const gameOver = ({ dispatch, state }) => {\n  const x =\n    state.cursor - state.errorArr.filter(el => el !== state.cursor).length;\n  const score = x > 0 ? x : 0;\n  const errorArr = state.errorArr.filter(el => el !== state.cursor);\n  const accuracy = calcAccuracy({ score, errorArr });\n  const update = {\n    // cursor: 0,\n    isTimerStarted: false,\n    currentWordOffsetTop: 0,\n    input: \"\",\n    displayText: [\n      ...state.displayText.slice(0, state.cursor),\n      ...formatTxt(state.textArr).slice(state.cursor)\n    ],\n    timer: state.training ? state.timer : 0,\n    score: state.training ? state.score : score,\n    errorArr,\n    accuracy\n  };\n  dispatch({ type: GAME_OVER, update });\n};\nexport const updateDataChart = ({ data, dispatch }) => {\n  dispatch({ type: UPDATE_DATA_CHART, data });\n};\n\nexport const getNewTxt = ({ dispatch }) => {\n  const wordList = getRandomWordList(200);  \n  const displayText = formatTxt(wordList);\n  const textArr = wordList;\n  dispatch({ type: GET_NEW_TXT, displayText, textArr });\n};\nexport const updateCurrentWordOffset = ({ dispatch, offset }) => {\n  dispatch({ type: UPDATE_CURRENT_WORD_OFFSET, offset });\n};\nexport const updateToolTip = ({ dispatch, toolTip }) => {\n  dispatch({ type: UPDATE_TOOLTIP, toolTip });\n};\nexport const updateScore = ({dispatch, accuracy, score}) => {\n  dispatch({ type: UPDATE_SCORE, accuracy, score})\n  \n}\n\nexport const updateInterval = ({dispatch, interval}) => {\n  dispatch({type: UPDATE_INTERVAL, interval})\n}\nexport const toggleTraining = ({dispatch, state}) => {\n  const displayText = formatTxt(state.textArr);\n  dispatch({type: TOGGLE_TRAINING, displayText})\n}\n\n\n","import React, { useEffect, useRef } from \"react\";\nimport { StyledTextBox } from \"./styledComponents\";\nimport { updateToolTip, updateCurrentWordOffset } from \"../actions\";\nimport { getOffsetTop } from \"../utils\";\n\nfunction TextBox(props) {\n  const {\n    toolTip,\n    errorArrTxt,\n    errorArr,\n    input,\n    currentWordOffsetTop,\n    cursor,\n    displayText\n  } = props.state;\n  const { dispatch } = props;\n  const textBoxRef = useRef();\n  useEffect(() => {\n    if (cursor === 0) {\n      textBoxRef.current.scroll(0, 0);\n    }\n  }, [cursor]);\n  useEffect(() => {\n    if (input === \"\") {\n      const offset = getOffsetTop(textBoxRef);\n      if (offset > currentWordOffsetTop) {\n        if (currentWordOffsetTop > 0) {\n          textBoxRef.current.scroll({\n            top: textBoxRef.current.scrollTop + (offset - currentWordOffsetTop),\n            behavior: \"smooth\"\n          });\n        }\n        updateCurrentWordOffset({dispatch, offset});\n      }\n    }\n  }, [input, currentWordOffsetTop, dispatch]);\n  return (\n    <StyledTextBox\n      id=\"textBox\"\n      ref={textBoxRef}\n      height=\"5em\"\n      onMouseOut={() => {\n        if(toolTip.visible){\n          updateToolTip({dispatch, toolTip:{ ...toolTip, txt: \"\", visible: false }});\n        }\n      }}\n      onMouseOver={e => {\n        const { id } = e.target;\n        const error = errorArrTxt.find(el => el.id === +id);\n        if (error) {\n          updateToolTip({dispatch,toolTip: {\n            ...toolTip,\n            visible: true,\n            txt: error.input\n          }});\n        } else if (errorArr.includes(+id)) { \n          updateToolTip({dispatch, toolTip:{\n            ...toolTip,\n            visible: true,\n            txt: \"\"\n          }});\n        }\n      }}\n      onMouseMove={e => {\n        const left = e.clientX;\n        const top = e.clientY;\n        if (toolTip.visible) {\n          updateToolTip({dispatch, toolTip: { ...toolTip, left, top }});\n        }\n      }}\n    >\n      {displayText}\n    </StyledTextBox>\n  );\n}\n\nexport default TextBox;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  setInput,\n  incrementCursor,\n  addErrorTxt,\n  // addError,\n  // removeError,\n  startTimer,\n  updateDisplayTxt\n} from \"../actions\";\nimport { checkInput } from \"../utils\";\n\nconst UserInput = props => {\n  const { dispatch } = props;\n  const {\n    textArr,\n    isTimerStarted,\n    timer,\n    cursor,\n    input,\n    errorArr,\n    training\n  } = props.state;\n  const handleChange = e => {\n    let newErroArr = [...errorArr];\n    let newCursor = cursor;\n    if ((!training && timer < 1) || (cursor > textArr.length - 1)) {\n      return;\n    }\n    if (!training && !isTimerStarted && timer > 0) {\n      startTimer({ start: true, dispatch });\n    }\n    if(training && !isTimerStarted){\n      startTimer({ start: true, dispatch });\n    }\n    let input = e.target.value;\n    console.log(\"input =\", input);\n    if (!checkInput(input, textArr[cursor])) {\n      if (!errorArr.includes(cursor)) {\n        // addError({dispatch, error: cursor});\n        newErroArr.push(cursor);\n      }\n    } else {\n      if (errorArr.includes(cursor)) {\n        // removeError({dispatch, errorArr, error: cursor});\n        newErroArr = newErroArr.filter(err => err !== cursor);\n      }\n    }\n    if (input.endsWith(\" \")) {\n      if (newErroArr.includes(cursor)) {\n        addErrorTxt({ dispatch, error: { id: cursor, input } });\n      }\n      incrementCursor({ dispatch });\n      input = \"\";\n      newCursor++;\n     \n    }\n    setInput({ input, dispatch });\n    updateDisplayTxt({\n      dispatch,\n      state: {\n        ...props.state,\n        input,\n        errorArr: [...newErroArr],\n        cursor: newCursor\n      }\n    });\n    \n  };\n  const [isFocus, setIsFocus] = useState(false);\n  return (\n    <StyledInput\n      type=\"text\"\n      placeholder={!isFocus && timer > 0 ? \"Type your text here...!\" : \"\"}\n      autoFocus\n      value={input}\n      onChange={handleChange}\n      onFocus={() => {\n        setIsFocus(true);\n      }}\n      onBlur={() => {\n        setIsFocus(false);\n      }}\n      isFocus={isFocus}\n    />\n  );\n};\n\nconst StyledInput = styled.input`\n  width: 400px;\n  margin: auto;\n  background: transparent;\n  text-align: center;\n  font-size: 24px;\n  padding: .2em .5em;\n\n  ${props =>\n    props.isFocus\n      ? `\n    border: thin solid transparent;\n    border-bottom: thin solid #6148ff;\n  `\n      : `\n    border: thin dashed #6148ff;\n  `}\n`;\n\nexport default UserInput;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport UserInput from \"../component/UserInput\";\nimport { reload, toggleTraining } from \"../actions\";\n// import reloadImg from \"./reload.png\";\nimport { Button } from \"../component/styledComponents\";\n\nconst InputContainer = ({ state, dispatch }) => {\n  return (\n    <Section>\n      {!state.training && state.timer > 0 && <UserInput state={state} dispatch={dispatch} />}\n      {state.training && state.cursor <= state.textArr.length -1 && <UserInput state={state} dispatch={dispatch} />}\n\n      {!state.training && state.timer < 1 && (\n        <ButtonReload\n          onClick={() => {\n            reload({ dispatch, state });\n          }}\n        >\n          reload\n        </ButtonReload>\n      )}\n       {state.training && !state.interval && state.timer > 0 && (\n        <ButtonReload\n          onClick={() => {\n            reload({ dispatch, state });\n          }}\n        >\n          reload\n        </ButtonReload>\n      )}\n      <ToggleButton\n        training={state.training}\n        onClick={() => {\n          toggleTraining({ dispatch, state });\n        \n        }}\n      >\n        {!state.training ? (\n          <div className=\"toggle-test\">Test</div>\n        ) : (\n          <div className=\"toogle-training\">Training</div>\n        )}\n      </ToggleButton>\n    </Section>\n  );\n};\n\nconst Section = styled.section`\n  padding: 20px;\n  margin: 30px 0;\n  display: flex;\n  align-items: center;\n  flex-direction: ${props => props.flexDirection || \"row\"}\n  justify-content: ${props => props.justify || \"center\"} ;\n  overflow: auto;\n  background: #eeeff8;\n border:  solid thin black;\n\n`;\n\nconst ButtonReload = styled(Button)`\n  text-transform: uppercase;\n  margin: auto;\n`;\n\nconst ToggleButton = styled.div`\n  width: 150px;\n  height: 2em;\n  font-size: 16px;\n  margin: 0 20px 0 auto;\n  border: solid thin black;\n  display: flex;\n  align-items: center;\n  background: ${props => (props.training ? \"#00b3b4\" : \"#f2395a\")};\n  color: white;\n  cursor: pointer;\n  \n\n  .toggle-test {\n    background: white;\n    color: #f2395a;\n    padding: 0.2em 0.5em;\n  }\n  .toogle-training {\n    margin-left: auto;\n    background: white;\n    color: #00b3b4;\n    padding: 0.2em 0.5em;\n  }\n`;\n\nexport default InputContainer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport TextBox from \"../component/TextBox\";\nimport InputContainer from \"../container/InputContainer\";\nimport { getNewTxt } from \"../actions\";\nimport { Button } from \"../component/styledComponents\";\n\nconst Main = ({ state, dispatch }) => {\n  return (\n    <StyledMain>\n      <ButtonContainer>\n        <ButtonGetText\n          onClick={() => {\n            clearInterval(state.interval);\n            getNewTxt({ dispatch, state });\n          }}\n        >\n          Get random text\n        </ButtonGetText>\n      </ButtonContainer>\n      <TextBox state={state} dispatch={dispatch} />\n      <InputContainer state={state} dispatch={dispatch} />\n    </StyledMain>\n  );\n};\n\nconst StyledMain = styled.main`\n  grid-column: 2;\n  grid-row: 1;\n  padding: 20px;\n`;\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nconst ButtonGetText = styled(Button)`\n  border-bottom-left-radius: 0;\n  border-bottom-right-radius: 0;\n`\n\nexport default Main;\n","import React from \"react\";\nimport { SideBare as Aside, ScoreContainer } from \"./styledComponents\";\n\nconst SideBare = ({ score, accuracy, timer }) => {\n  return (\n    <Aside>\n      <ScoreContainer>\n        <div style={{ fontSize: \"72px\" }}>\n          <p>WPM</p>\n          <p>{score}</p>\n        </div>\n        <div style={{ fontSize: \"24px\", color: 'orange' }}>\n          Accuracy: <span>{accuracy}</span>%\n        </div>\n        <div style={{ fontSize: \"72px\" }}>\n          <p>Timer</p>\n          <p style={{color: timer < 11 ? 'red' : '' }} >{timer}</p>\n        </div>\n      </ScoreContainer>\n    </Aside>\n  );\n};\n\nexport default SideBare;\n","import React, { useEffect, useRef } from \"react\";\nimport { StyledChart } from \"./styledComponents\";\nimport * as d3 from \"d3\";\n\nconst Chart = ({ data, title }) => {\n  const svgRef = useRef();\n  useEffect(() => {\n    d3.select(svgRef.current)\n      .select(\"svg\")\n      .remove();\n    const margin = { top: 20, right: 30, bottom: 30, left: 60 },\n      width = 600 - margin.left - margin.right,\n      height = 200 - margin.top - margin.bottom;\n\n    const svg = d3\n      .select(svgRef.current)\n      .append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    let x = d3\n      .scaleLinear()\n      .domain([0, data.length])\n      .range([0, width]);\n    svg\n      .append(\"g\")\n      .style(\"stroke\", \"orange\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n    let y = d3\n      .scaleLinear()\n      .domain([\n        0,\n        d3.max(data, function(d) {\n          return +d.value;\n        })\n      ])\n      .range([height, 0]);\n    svg\n      .append(\"g\")\n      .attr(\"stroke\", \"orange\")\n      .call(d3.axisLeft(y));\n\n    svg\n      .append(\"path\")\n      .datum(data)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#6de576\")\n      .attr(\"stroke-width\", 1.5)\n      .attr(\n        \"d\",\n        d3\n          .line()\n          .x((d, i) => {\n            return x(i);\n          })\n          .y((d) => {\n            return y(d.value);\n          })\n      );\n    svg\n      .append(\"text\")\n      .attr(\"x\", -height / 2)\n      .attr(\"y\", -30)\n      .attr(\"transform\", \"rotate(-90)\")\n      .style(\"font-size\", \"16px\")\n      .style(\"text-anchor\", \"middle\")\n      .style(\"stroke\", \"orange\")\n      .style(\"fill\", \"orange\")\n      .text(title);\n\n    svg\n      .selectAll(\"circle\")\n      .data(data)\n      .enter()\n      .append(\"circle\")\n      .attr(\"stroke\", \"#6de576\")\n      .attr(\"fill\", \"#6de576\")\n      .attr(\"cx\", (d, i) => {\n        return x(i);\n      })\n      .attr(\"cy\", (d) => {\n        return y(d.value);\n      })\n      .attr(\"r\", 3)\n      .append(\"title\")\n      .text(d => `${d.value}${title !=='Accuracy'? ' '+title : '%'} on ${new Date(d.date).toLocaleString()}`);\n  }, [data, title]);\n\n  return <StyledChart ref={svgRef} />;\n};\n\nexport default Chart;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ToolTip = (props ) => {\n  return <StyledToolTip {...props}>\n    {props.txt !== ' ' ? props.txt : '\" \"'}\n  </StyledToolTip>;\n};\n\nconst StyledToolTip = styled.div`\n  padding: .2em .5em;\n  font-size: 36px;\n  background: white;\n  border: solid thin black;\n  visibility: ${props => (props.visible ? \"visible\" : \"hidden\")}\n\n  position: absolute;\n  top: ${props => props.top + 10 + \"px\"}\n  left: ${props => props.left + 10 + \"px\"}\n`;\n\nexport default ToolTip;\n","import { formatTxt, getDataLocalSorage } from \"./utils\";\nimport { getRandomWordList } from \"./wordList\";\n\nconst wordList = getRandomWordList(200);\n\nexport const initState = {\n  displayText: formatTxt(wordList),\n  textArr: wordList,\n  input: \"\",\n  errorArr: [],\n  errorArrTxt: [],\n  cursor: 0,\n  timer: 60,\n  isTimerStarted: false,\n  score: 0,\n  dataChart: [ ...getDataLocalSorage()],\n  accuracy: 100,\n  currentWordOffsetTop: 0,\n  toolTip: {\n    visible: false,\n    top: 0,\n    left: 0,\n    txt: \"\"\n  },\n  interval: undefined,\n  training: false\n};\n","import * as actionsTypes from \"./actions\";\n\nimport { initState } from \"./store\";\n\nconst reducer = (state, action) => {\n  if (action.type === actionsTypes.GAME_OVER) {\n    console.log(state);\n  }\n  if (![actionsTypes.DEC_TIMER].includes(action.type)) {\n    //  console.log(state)\n    console.log(action.type);\n  }\n  switch (action.type) {\n    case actionsTypes.SET_INPUT:\n      return { ...state, input: action.input };\n    case actionsTypes.UPDATE_DISPLAY_TXT:\n      return {\n        ...state,\n        ...action.update\n      };\n    case actionsTypes.ADD_ERROR:\n      return {\n        ...state,\n        errorArr: [...state.errorArr, action.error]\n      };\n    case actionsTypes.REMOVE_ERROR:\n      return {\n        ...state,\n        errorArr: [...action.newErrorArr]\n      };\n    case actionsTypes.ADD_ERROR_TXT:\n      return {\n        ...state,\n        errorArrTxt: [...state.errorArrTxt, action.error]\n      };\n    case actionsTypes.INC_CURSOR:\n      return { ...state, cursor: state.cursor + 1 };\n    case actionsTypes.RELOAD:\n      return {\n        ...initState,\n        displayText: action.displayText,\n        textArr: [...state.textArr],\n        dataChart: [...state.dataChart],\n        training: state.training,\n        timer: state.training ? 0 : initState.timer\n      };\n    case actionsTypes.DEC_TIMER:\n      return { ...state, timer: state.timer - 1 };\n    case actionsTypes.INC_TIMER:\n      return { ...state, timer: state.timer + 1 };\n    case actionsTypes.START_TIMER:\n      return { ...state, isTimerStarted: true };\n    case actionsTypes.GAME_OVER:\n      return {\n        ...state,\n        ...action.update\n      };\n    case actionsTypes.UPDATE_DATA_CHART:\n      return { ...state, dataChart: [...state.dataChart, action.data] };\n    case actionsTypes.GET_NEW_TXT:\n      return {\n        ...initState,\n        displayText: action.displayText,\n        textArr: action.textArr,\n        dataChart: [...state.dataChart],\n        training: state.training,\n        timer: state.training ? 0 : initState.timer\n      };\n    case actionsTypes.UPDATE_CURRENT_WORD_OFFSET:\n      return { ...state, currentWordOffsetTop: action.offset };\n    case actionsTypes.UPDATE_TOOLTIP:\n      return { ...state, toolTip: { ...state.toolTip, ...action.toolTip } };\n    case actionsTypes.UPDATE_SCORE:\n      return { ...state, score: action.score, accuracy: action.accuracy };\n    case actionsTypes.UPDATE_INTERVAL:\n      return { ...state, interval: action.interval };\n    case actionsTypes.TOGGLE_TRAINING:\n      return {\n        ...initState,\n        displayText: action.displayText,\n        textArr: [...state.textArr],\n        dataChart: [...state.dataChart],\n        training: !state.training,\n        timer: !state.training ? 0 : initState.timer\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React, { useReducer, useEffect } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport Main from \"./container/Main\";\nimport SideBare from \"./component/SideBare\";\nimport Chart from \"./component/Chart\";\n\nimport ToolTip from \"./component/ToolTip\";\nimport { Grid, ChartsContainer } from \"./component/styledComponents\";\n\nimport {\n  decTimer,\n  gameOver,\n  updateDataChart,\n  updateScore,\n  updateInterval,\n  incTimer,\n  updateDisplayTxt\n} from \"./actions\";\nimport { saveResultLocalStorage, calcAccuracy } from \"./utils\";\nimport { initState } from \"./store\";\nimport reducer from \"./reducer\";\n\nconst GlobalStyle = createGlobalStyle`\n  *{\n    box-sizing: border-box;\n  }\n  html, body{\n    margin: 0;\n    padding: 0;\n  }\n`;\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initState);\n  const {\n    timer,\n    isTimerStarted,\n    score,\n    dataChart,\n    accuracy,\n    cursor,\n    errorArr,\n    interval,\n    training,\n    textArr\n  } = state;\n\n  useEffect(() => {\n    // decrement timer and call gameOver when timer=0\n    if (!training && timer > 0 && isTimerStarted && !interval) {\n      const timerInterval = setInterval(() => {\n        decTimer({ dispatch });\n      }, 1000);\n      updateInterval({ dispatch, interval: timerInterval });\n    }\n    if (!training && timer < 1 && isTimerStarted) {\n      clearInterval(interval);\n      updateInterval({ dispatch, interval: undefined });\n      gameOver({ dispatch, state });\n    }\n  }, [timer, isTimerStarted, interval, state, training]);\n\n  useEffect(() => {\n    // update score and accuracy\n    if ((!training && timer > 0) || (training && isTimerStarted)) {\n      const words = cursor - errorArr.filter(el => el !== cursor).length;\n      let wpm;\n      if (!training) {\n        wpm =\n          words > 0 && timer < initState.timer\n            ? (words * initState.timer) / (initState.timer - timer)\n            : 0;\n      } else {\n        wpm = words > 0 && timer > 0 ? (words * 60) / timer : 0;\n      }\n\n      const accuracy = calcAccuracy({ score: words, errorArr: errorArr });\n      updateScore({ dispatch, accuracy, score: wpm.toFixed(0) });\n    }\n  }, [cursor, errorArr, timer, training, isTimerStarted]);\n\n  useEffect(() => {\n    // save user progress in localstorage\n    if (!training && timer < 1 && score > 0 && !isTimerStarted) {\n      const data = saveResultLocalStorage({ score, accuracy, type: 'test' });\n      console.log(\"data =\", data);\n      updateDataChart({ data, dispatch });\n    }\n    if (training  && score > 0 && !isTimerStarted) {\n      const data = saveResultLocalStorage({ score, accuracy, type: 'training' });\n      console.log(\"data =\", data);\n      updateDataChart({ data, dispatch });\n    }\n\n  }, [score, accuracy, timer, isTimerStarted, training]);\n\n  useEffect(() => {\n    if (training && !interval && isTimerStarted) {\n      const timerInterval = setInterval(() => {\n        incTimer({ dispatch });\n      }, 1000);\n      updateInterval({ dispatch, interval: timerInterval, training });\n    }\n  });\n  useEffect(() => {\n    if(training && cursor > textArr.length - 1 && interval){\n      clearInterval(interval);\n      updateInterval({ dispatch, interval: undefined });\n      gameOver({ dispatch, state});\n      updateDisplayTxt({dispatch, state})\n    }\n  });\n\n  const data = training ? dataChart.filter(d => d.type === 'training') :  dataChart.filter(d => d.type === 'test')\nwindow.console.log = () => {}\n  return (\n    <>\n      <GlobalStyle />\n      <Grid>\n        <SideBare score={score} accuracy={accuracy} timer={timer} />\n        <Main state={state} dispatch={dispatch} />\n        <ChartsContainer>\n          <Chart\n            title=\"WPM\"\n            data={data.map(d => ({ date: d.date, value: d.score }))}\n          />\n          <Chart\n            title=\"Accuracy\"\n            data={data.map(d => ({ date: d.date, value: d.accuracy }))}\n          />\n        </ChartsContainer>\n\n        <ToolTip {...state.toolTip} />\n      </Grid>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}